{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Users\\\\sosol\\\\Desktop\\\\Codeflix\\\\onecode\\\\cx-search-in-github\\\\client\\\\src\\\\Component\\\\UserGithub.js\";\nimport React from 'react';\nimport '../App.css';\nimport TableG from './TableG';\nimport './TableG.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCoffee } from '@fortawesome/free-solid-svg-icons';\nimport circularbar from './circulbar';\n\nclass UserGithub extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: null,\n      username: this.props.match.params.username\n    };\n  }\n\n  async componentDidMount() {\n    const responsedb = await fetch(`http://localhost:4242/users/${this.state.username}`);\n    const data2 = await responsedb.json();\n    console.log(data2.length);\n\n    if (data2.length == 0) {\n      const responseApi = await fetch(`http://api.github.com/users/${this.state.username}`);\n      const dataApi = await responseApi.json();\n      let tab = [];\n      tab.push(dataApi); // console.log(dataApi)\n      //on insère le login en minuscule pour éviter une double insértion problèmatique lorsque l'user entre un nom mais avec des majuscule différentes exemple : soufianlabed et SoufianLabed\n\n      if (dataApi.login != null) {\n        dataApi.login = dataApi.login.toLowerCase();\n        this.setState({\n          user: tab\n        });\n      }\n\n      const post = await fetch('http://localhost:4242/users', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(dataApi)\n      });\n      await post.json();\n    } else {\n      let tab = [];\n      tab.push(data2);\n      console.log(data2);\n      this.setState({\n        user: data2\n      });\n      console.log(data2);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        style: {\n          width: \"100%\"\n        },\n        children: this.state.user ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tableG\",\n            children: this.state.user.map(user => /*#__PURE__*/_jsxDEV(TableG, {\n              champs1: user.login,\n              champs2: user.id,\n              champs3: user.avatar_url,\n              champs4: user.gravatar_id,\n              champs5: user.url,\n              champs6: user.html_url,\n              champs7: user.followers_url,\n              champs8: user.following_url,\n              champs9: user.gists_url,\n              champs10: user.starred_url,\n              champs11: user.subscriptions_url,\n              champs12: user.organizations_url,\n              champs13: user.repos_url,\n              champs14: user.events_url,\n              champs15: user.received_events_url,\n              champs16: user.type,\n              champs17: user.site_admin,\n              champs18: user.name,\n              champs19: user.company,\n              champs20: user.blog,\n              champs21: user.location,\n              champs22: user.email,\n              champs23: user.hireable,\n              champs24: user.bio,\n              champs25: user.twitter_username,\n              champs26: user.public_repos,\n              champs27: user.public_gists,\n              champs28: user.followers,\n              champs29: user.following,\n              champs30: user.created_at,\n              champs31: user.updated_at\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            height: \"100vh\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"circularbar\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 18\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 10\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default UserGithub;","map":{"version":3,"sources":["D:/Users/sosol/Desktop/Codeflix/onecode/cx-search-in-github/client/src/Component/UserGithub.js"],"names":["React","TableG","FontAwesomeIcon","faCoffee","circularbar","UserGithub","Component","constructor","props","state","user","username","match","params","componentDidMount","responsedb","fetch","data2","json","console","log","length","responseApi","dataApi","tab","push","login","toLowerCase","setState","post","method","headers","body","JSON","stringify","render","width","map","id","avatar_url","gravatar_id","url","html_url","followers_url","following_url","gists_url","starred_url","subscriptions_url","organizations_url","repos_url","events_url","received_events_url","type","site_admin","name","company","blog","location","email","hireable","bio","twitter_username","public_repos","public_gists","followers","following","created_at","updated_at","marginLeft","marginRight","height"],"mappings":"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","sourcesContent":["import React from 'react'\r\n\r\nimport '../App.css';\r\n\r\nimport TableG from './TableG'\r\nimport './TableG.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCoffee  } from '@fortawesome/free-solid-svg-icons'\r\nimport circularbar from './circulbar';\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass UserGithub extends React.Component{\r\n\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      user : null,\r\n      username : (this.props.match.params.username)\r\n  \r\n    }\r\n  }\r\n\r\n  \r\n\r\n\r\n  async componentDidMount(){\r\n\r\n\r\n  \r\n  const responsedb = await fetch(`http://localhost:4242/users/${this.state.username}`)\r\n  const data2 = await responsedb.json()\r\n  console.log(data2.length)\r\n\r\n  if(data2.length == 0){\r\n\r\n    const responseApi = await fetch(`http://api.github.com/users/${this.state.username}`)\r\n    \r\n    const dataApi = await responseApi.json()\r\n\r\n    \r\n    let tab = []\r\n   \r\n    tab.push(dataApi)\r\n   // console.log(dataApi)\r\n\r\n\r\n\r\n    //on insère le login en minuscule pour éviter une double insértion problèmatique lorsque l'user entre un nom mais avec des majuscule différentes exemple : soufianlabed et SoufianLabed\r\n    if(dataApi.login != null){\r\n    dataApi.login = (dataApi.login).toLowerCase()\r\n    this.setState({user : tab})\r\n    }\r\n    \r\n\r\n\r\n    const post = await fetch('http://localhost:4242/users', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(dataApi),\r\n    })\r\n    await post.json()\r\n    \r\n    \r\n    \r\n  \r\n\r\n  }else{\r\n    \r\n    let tab = []\r\n    tab.push(data2)\r\n    console.log(data2)\r\n    this.setState({user : data2})\r\n    console.log(data2)\r\n  \r\n  }\r\n\r\n  }\r\n\r\n\r\n  \r\n  \r\n\r\n  render(){\r\n\r\n   return (\r\n        <div >\r\n\r\n        \r\n      \r\n        <div className=\"row\" style={{width:\"100%\"}}>\r\n\r\n       \r\n        {this.state.user ? (\r\n          <div className=\"row\">\r\n            <div className=\"tableG\">\r\n            {this.state.user.map(user => (\r\n\r\n                <TableG\r\n                                      \r\n                champs1={user.login} \r\n                champs2={user.id} \r\n                champs3 = {user.avatar_url}\r\n                champs4 = {user.gravatar_id}\r\n                champs5 = {user.url}\r\n                champs6 = {user.html_url}\r\n                champs7 = {user.followers_url}\r\n                champs8 = {user.following_url}\r\n                champs9 = {user.gists_url}\r\n                champs10 = {user.starred_url}\r\n                champs11= {user.subscriptions_url}\r\n                champs12 = {user.organizations_url}\r\n                champs13 = {user.repos_url}\r\n                champs14 = {user.events_url}\r\n                champs15 = {user.received_events_url}\r\n                champs16 = {user.type}\r\n                champs17= {user.site_admin}\r\n                champs18 = {user.name}\r\n                champs19 = {user.company}\r\n                champs20 = {user.blog}\r\n                champs21 = {user.location}\r\n                champs22 = {user.email}\r\n                champs23 = {user.hireable}\r\n                champs24 = {user.bio}\r\n                champs25 = {user.twitter_username}\r\n                champs26 = {user.public_repos}\r\n\r\n                champs27 = {user.public_gists}\r\n                champs28 = {user.followers}\r\n                champs29 = {user.following}\r\n                champs30 = {user.created_at}\r\n\r\n                champs31 = {user.updated_at}\r\n\r\n\r\n     \r\n            \r\n                />\r\n              \r\n            ))}\r\n            </div>\r\n          </div>\r\n        ) : (\r\n         <div style={{marginLeft:\"auto\",marginRight:\"auto\",height:\"100vh\"}}>\r\n                 <circularbar/>\r\n         </div>\r\n        )}\r\n        </div>\r\n        </div>\r\n      \r\n    );\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n  }\r\nexport default UserGithub;"]},"metadata":{},"sourceType":"module"}