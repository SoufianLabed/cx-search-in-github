{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Users\\\\sosol\\\\Desktop\\\\Codeflix\\\\onecode\\\\cx-search-in-github\\\\client\\\\src\\\\Component\\\\UserGithub.js\";\nimport React from 'react';\nimport '../App.css';\nimport TableG from './TableG';\nimport './TableG.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faGithub } from '@fortawesome/free-solid-svg-icons';\n\nclass UserGithub extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: null,\n      username: this.props.match.params.username\n    };\n  }\n\n  async componentDidMount() {\n    /*\r\n       const response = await fetch('https://api.github.com/users/SoufianLabed')\r\n       const data = await response.json()\r\n    \n       //const key = Object.keys(data).length\r\n       //console.log(\"Key : \"+key)\r\n       \r\n       let tab = []\r\n       tab.push(data)\r\n       this.setState({user : tab})\r\n     //  console.log(data)*/\n    const responsedb = await fetch(`http://localhost:4242/users/${this.state.username}`);\n    const data2 = await responsedb.json();\n    console.log(data2.length);\n\n    if (data2.length == 0) {\n      console.log(\"x\");\n      const responseApi = await fetch(`http://api.github.com/users/${this.state.username}`);\n      const dataApi = await responseApi.json();\n      console.log(\"dataApi : \" + dataApi);\n      console.log(\"dataApi33 : \" + dataApi);\n      let tab = [];\n      console.log(\"dataApi2 : \" + dataApi);\n      tab.push(dataApi); // console.log(dataApi)\n\n      this.setState({\n        user: tab\n      });\n      const post = await fetch('http://localhost:4242/users', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(dataApi)\n      });\n      await post.json();\n    } else {\n      let tab = [];\n      tab.push(data2);\n      console.log(data2);\n      this.setState({\n        user: data2\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        style: {\n          width: \"100%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          style: {\n            color: \"white\",\n            marginTop: \"30px\",\n            position: \"absolute\"\n          },\n          icon: faGithub\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 9\n        }, this), this.state.user ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tableG\",\n            children: this.state.user.map(user => /*#__PURE__*/_jsxDEV(TableG, {\n              champs1: user.login,\n              champs2: user.login,\n              rep1: user.login,\n              rep2: user.login\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            height: \"100vh\"\n          },\n          children: \"Y A PAS DE DATA\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default UserGithub;","map":{"version":3,"sources":["D:/Users/sosol/Desktop/Codeflix/onecode/cx-search-in-github/client/src/Component/UserGithub.js"],"names":["React","TableG","FontAwesomeIcon","faGithub","UserGithub","Component","constructor","props","state","user","username","match","params","componentDidMount","responsedb","fetch","data2","json","console","log","length","responseApi","dataApi","tab","push","setState","post","method","headers","body","JSON","stringify","render","width","color","marginTop","position","map","login","marginLeft","marginRight","height"],"mappings":"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","sourcesContent":["import React from 'react'\r\n\r\nimport '../App.css';\r\n\r\nimport TableG from './TableG'\r\nimport './TableG.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faGithub } from '@fortawesome/free-solid-svg-icons'\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass UserGithub extends React.Component{\r\n\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      user : null,\r\n      username : this.props.match.params.username\r\n  \r\n    }\r\n  }\r\n\r\n  \r\n\r\n\r\n  \r\n\r\n\r\n  async componentDidMount(){\r\n\r\n\r\n /*\r\n    const response = await fetch('https://api.github.com/users/SoufianLabed')\r\n    const data = await response.json()\r\n\r\n    //const key = Object.keys(data).length\r\n    //console.log(\"Key : \"+key)\r\n    \r\n    let tab = []\r\n    tab.push(data)\r\n    this.setState({user : tab})\r\n  //  console.log(data)*/\r\n\r\n  \r\n  const responsedb = await fetch(`http://localhost:4242/users/${this.state.username}`)\r\n  const data2 = await responsedb.json()\r\n  console.log(data2.length)\r\n\r\n  if(data2.length == 0){\r\n\r\n    console.log(\"x\")\r\n    const responseApi = await fetch(`http://api.github.com/users/${this.state.username}`)\r\n    \r\n    const dataApi = await responseApi.json()\r\n    console.log(\"dataApi : \"+dataApi)\r\n    console.log(\"dataApi33 : \"+dataApi)\r\n\r\n    \r\n    let tab = []\r\n    console.log(\"dataApi2 : \"+dataApi)\r\n    tab.push(dataApi)\r\n   // console.log(dataApi)\r\n \r\n    this.setState({user : tab})\r\n\r\n    const post = await fetch('http://localhost:4242/users', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(dataApi),\r\n    })\r\n    await post.json()\r\n    \r\n    \r\n    \r\n  \r\n\r\n  }else{\r\n    \r\n    let tab = []\r\n    tab.push(data2)\r\n    console.log(data2)\r\n    this.setState({user : data2})\r\n  \r\n  }\r\n\r\n  }\r\n\r\n\r\n  \r\n  \r\n\r\n  render(){\r\n\r\n   return (\r\n        <div >\r\n\r\n        \r\n      \r\n        <div className=\"row\" style={{width:\"100%\"}}>\r\n\r\n        <FontAwesomeIcon style={{color:\"white\",marginTop:\"30px\",position:\"absolute\"}}icon={faGithub} />\r\n\r\n        {this.state.user ? (\r\n          <div className=\"row\">\r\n            <div className=\"tableG\">\r\n            {this.state.user.map(user => (\r\n\r\n                <TableG\r\n                                      \r\n                champs1={user.login} \r\n                champs2={user.login} \r\n               \r\n\r\n                rep1={user.login} \r\n                rep2={user.login} \r\n            \r\n                />\r\n              \r\n            ))}\r\n            </div>\r\n          </div>\r\n        ) : (\r\n         <div style={{marginLeft:\"auto\",marginRight:\"auto\",height:\"100vh\"}}>\r\n                Y A PAS DE DATA\r\n         </div>\r\n        )}\r\n        </div>\r\n        </div>\r\n      \r\n    );\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n  }\r\nexport default UserGithub;"]},"metadata":{},"sourceType":"module"}