{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Users\\\\sosol\\\\Desktop\\\\Codeflix\\\\onecode\\\\cx-search-in-github\\\\client\\\\src\\\\Component\\\\UserGithub.js\";\nimport React from 'react';\nimport '../App.css';\n\nclass UserGithub extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: null\n    };\n  }\n\n  async componentDidMount() {\n    /*\r\n       const response = await fetch('https://api.github.com/users/SoufianLabed')\r\n       const data = await response.json()\r\n    \n       //const key = Object.keys(data).length\r\n       //console.log(\"Key : \"+key)\r\n       \r\n       let tab = []\r\n       tab.push(data)\r\n       this.setState({user : tab})\r\n     //  console.log(data)*/\n    const responsedb = await fetch('http://localhost:4242/users/franco');\n    const data2 = await responsedb.json();\n    console.log(data2.length);\n\n    if (data2.length == 0) {\n      const responseApi = await fetch('http://api.github.com/users/franco');\n      const dataApi = await responseApi.json();\n      console.log(\"dataApi : \" + dataApi);\n      const post = await fetch('http://localhost:4242/users', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(dataApi)\n      });\n      await post.json();\n      let tab = [];\n      tab.push(dataApi);\n      console.log(dataApi);\n      this.setState({\n        user: dataApi\n      });\n    } else {\n      let tab = [];\n      tab.push(data2);\n      console.log(data2);\n      this.setState({\n        user: data2\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        style: {\n          width: \"100%\"\n        },\n        children: this.state.user ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: this.state.user.map(user => user.login)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            height: \"100vh\"\n          },\n          children: \"Y A PAS DE DATA\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 10\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default UserGithub;","map":{"version":3,"sources":["D:/Users/sosol/Desktop/Codeflix/onecode/cx-search-in-github/client/src/Component/UserGithub.js"],"names":["React","UserGithub","Component","constructor","props","state","user","componentDidMount","responsedb","fetch","data2","json","console","log","length","responseApi","dataApi","post","method","headers","body","JSON","stringify","tab","push","setState","render","width","map","login","marginLeft","marginRight","height"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,YAAP;;AAOA,MAAMC,UAAN,SAAyBD,KAAK,CAACE,SAA/B,CAAwC;AAEtCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAG;AADI,KAAb;AAID;;AAQD,QAAMC,iBAAN,GAAyB;AAG1B;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGE,UAAMC,UAAU,GAAG,MAAMC,KAAK,CAAC,oCAAD,CAA9B;AACA,UAAMC,KAAK,GAAG,MAAMF,UAAU,CAACG,IAAX,EAApB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACI,MAAlB;;AAEA,QAAGJ,KAAK,CAACI,MAAN,IAAgB,CAAnB,EAAqB;AAGnB,YAAMC,WAAW,GAAG,MAAMN,KAAK,CAAC,oCAAD,CAA/B;AAEA,YAAMO,OAAO,GAAG,MAAMD,WAAW,CAACJ,IAAZ,EAAtB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAaG,OAAzB;AAEA,YAAMC,IAAI,GAAG,MAAMR,KAAK,CAAC,6BAAD,EAAgC;AACtDS,QAAAA,MAAM,EAAE,MAD8C;AAEtDC,QAAAA,OAAO,EAAE;AAAE,0BAAgB;AAAlB,SAF6C;AAGtDC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,OAAf;AAHgD,OAAhC,CAAxB;AAKA,YAAMC,IAAI,CAACN,IAAL,EAAN;AAGA,UAAIY,GAAG,GAAG,EAAV;AACAA,MAAAA,GAAG,CAACC,IAAJ,CAASR,OAAT;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,OAAZ;AACA,WAAKS,QAAL,CAAc;AAACnB,QAAAA,IAAI,EAAGU;AAAR,OAAd;AAGD,KAtBD,MAsBK;AAEH,UAAIO,GAAG,GAAG,EAAV;AACAA,MAAAA,GAAG,CAACC,IAAJ,CAASd,KAAT;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACA,WAAKe,QAAL,CAAc;AAACnB,QAAAA,IAAI,EAAGI;AAAR,OAAd;AAED;AAEA;;AAMDgB,EAAAA,MAAM,GAAE;AAEP,wBACK;AAAA,6BAIA;AAAK,QAAA,SAAS,EAAC,KAAf;AAAqB,QAAA,KAAK,EAAE;AAACC,UAAAA,KAAK,EAAC;AAAP,SAA5B;AAAA,kBAEC,KAAKtB,KAAL,CAAWC,IAAX,gBACC;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA,oBAEG,KAAKD,KAAL,CAAWC,IAAX,CAAgBsB,GAAhB,CAAoBtB,IAAI,IAEvBA,IAAI,CAACuB,KAFN;AAFH;AAAA;AAAA;AAAA;AAAA,gBADD,gBASA;AAAK,UAAA,KAAK,EAAE;AAACC,YAAAA,UAAU,EAAC,MAAZ;AAAmBC,YAAAA,WAAW,EAAC,MAA/B;AAAsCC,YAAAA,MAAM,EAAC;AAA7C,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAXD;AAAA;AAAA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA,YADL;AAwBA;;AAnGqC;;AA2GxC,eAAe/B,UAAf","sourcesContent":["import React from 'react'\r\n\r\nimport '../App.css';\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass UserGithub extends React.Component{\r\n\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      user : null\r\n  \r\n    }\r\n  }\r\n\r\n  \r\n\r\n\r\n  \r\n\r\n\r\n  async componentDidMount(){\r\n\r\n\r\n /*\r\n    const response = await fetch('https://api.github.com/users/SoufianLabed')\r\n    const data = await response.json()\r\n\r\n    //const key = Object.keys(data).length\r\n    //console.log(\"Key : \"+key)\r\n    \r\n    let tab = []\r\n    tab.push(data)\r\n    this.setState({user : tab})\r\n  //  console.log(data)*/\r\n\r\n  \r\n  const responsedb = await fetch('http://localhost:4242/users/franco')\r\n  const data2 = await responsedb.json()\r\n  console.log(data2.length)\r\n\r\n  if(data2.length == 0){\r\n\r\n    \r\n    const responseApi = await fetch('http://api.github.com/users/franco')\r\n    \r\n    const dataApi = await responseApi.json()\r\n    console.log(\"dataApi : \"+dataApi)\r\n\r\n    const post = await fetch('http://localhost:4242/users', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(dataApi),\r\n    })\r\n    await post.json()\r\n    \r\n    \r\n    let tab = []\r\n    tab.push(dataApi)\r\n    console.log(dataApi)\r\n    this.setState({user : dataApi})\r\n  \r\n\r\n  }else{\r\n    \r\n    let tab = []\r\n    tab.push(data2)\r\n    console.log(data2)\r\n    this.setState({user : data2})\r\n  \r\n  }\r\n\r\n  }\r\n\r\n\r\n  \r\n  \r\n\r\n  render(){\r\n\r\n   return (\r\n        <div >\r\n\r\n        \r\n      \r\n        <div className=\"row\" style={{width:\"100%\"}}>\r\n\r\n        {this.state.user ? (\r\n          <div className=\"row\">\r\n              \r\n            {this.state.user.map(user => (\r\n\r\n              user.login\r\n            ))}\r\n          </div>\r\n        ) : (\r\n         <div style={{marginLeft:\"auto\",marginRight:\"auto\",height:\"100vh\"}}>\r\n                Y A PAS DE DATA\r\n         </div>\r\n        )}\r\n        </div>\r\n        </div>\r\n      \r\n    );\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n  }\r\nexport default UserGithub;"]},"metadata":{},"sourceType":"module"}